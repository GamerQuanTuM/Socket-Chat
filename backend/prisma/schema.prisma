// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id                   String          @id @default(auto()) @map("_id") @db.ObjectId
  name                 String
  email                String          @unique
  username             String
  password             String
  bio                  String?
  avatar               String?
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt
  sentFriendRequest    FriendRequest[] @relation("SentFriendRequests")
  receiveFriendRequest FriendRequest[] @relation("ReceivedFriendRequests")
  sentMessage          Chat[]          @relation("SentMessages")
  receivedMessage      Chat[]          @relation("ReceivedMessages")
}

model Chat {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId   String   @db.ObjectId
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model FriendRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  status     Status   @default(PENDING)
  senderId   String   @db.ObjectId
  sender     User     @relation("SentFriendRequests", fields: [senderId], references: [id])
  receiverId String   @db.ObjectId
  receiver   User     @relation("ReceivedFriendRequests", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
